{"remainingRequest":"/home/agustin/Desktop/Vue/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/agustin/Desktop/Vue/app/src/components/ListadoSocio.vue?vue&type=style&index=0&id=310236ef&scoped=true&lang=css&","dependencies":[{"path":"/home/agustin/Desktop/Vue/app/src/components/ListadoSocio.vue","mtime":1578776169932},{"path":"/home/agustin/Desktop/Vue/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/agustin/Desktop/Vue/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/agustin/Desktop/Vue/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/agustin/Desktop/Vue/app/node_modules/vuetify-loader/lib/loader.js","mtime":1567240333000},{"path":"/home/agustin/Desktop/Vue/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/agustin/Desktop/Vue/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NvbnRhaW5lciB7CiAgYmFja2dyb3VuZDogdXJsKCIuLi9hc3NldHMvYmFja2dyb3VuZDIuanBnIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgZml4ZWQ7CiAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOwogIC1tb3otYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsKICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOwogIGJhY2tncm91bmQtc2l6ZTogY292ZXI7Cn0KLmV4cGlyZWRTdWJ0aXRsZSB7CiAgY29sb3I6IHJlZDsKfQo="},{"version":3,"sources":["ListadoSocio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListadoSocio.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-app id=\"container\">\n    <v-container fluid class=\"mx-auto my-auto\">\n      <v-row align=\"center\" justify=\"center\">\n        <v-col cols=\"4\">\n          <v-card max-width=\"600\" class=\"mx-auto\" shaped>\n            <v-toolbar color=\"blue-grey darken-3\" dark>\n              <v-toolbar-title>Todos los libros</v-toolbar-title>\n            </v-toolbar>\n            <v-list two-line subheader>\n              <v-list-item v-for=\"book in books\" :key=\"book.id\">\n                <v-list-item-content>\n                  <v-list-item-title v-text=\"book.title\"></v-list-item-title>\n                  <v-list-item-subtitle v-text=\"book.author\"></v-list-item-subtitle>\n                </v-list-item-content>\n\n                <v-list-item-action>\n                  <v-btn\n                    class=\"ma-2\"\n                    elevation=\"4\"\n                    rounded\n                    dark\n                    color=\"light-blue\"\n                    v-if=\"!zeroBooks\"\n                    @click=\"lentBook(book.id)\"\n                  >Pedir</v-btn>\n                  <v-btn\n                    class=\"ma-2\"\n                    elevation=\"4\"\n                    rounded\n                    dark\n                    color=\"light-blue\"\n                    v-if=\"zeroBooks\"\n                    @click=\"getBooks\"\n                  >Reintentar</v-btn>\n                </v-list-item-action>\n              </v-list-item>\n            </v-list>\n          </v-card>\n        </v-col>\n        <v-col cols=\"4\">\n          <v-card max-width=\"600\" class=\"mx-auto\" shaped>\n            <v-toolbar color=\"blue-grey darken-3\" dark>\n              <v-toolbar-title>Mis libros</v-toolbar-title>\n            </v-toolbar>\n            <v-list two-line subheader>\n              <v-list-item v-for=\"book in myBooks\" :key=\"book.title\">\n                <v-list-item-content>\n                  <v-list-item-title v-text=\"book.title\"></v-list-item-title>\n                  <v-list-item-subtitle v-text=\"book.author\"></v-list-item-subtitle>\n                  <v-list-item-subtitle v-bind:class=\"{ expiredSubtitle: !dialog }\" v-text=\"book.expiration\"></v-list-item-subtitle>\n                </v-list-item-content>\n\n                <v-list-item-action>\n                  <v-btn\n                    class=\"ma-2\"\n                    elevation=\"4\"\n                    rounded\n                    dark\n                    color=\"red\"\n                    v-if=\"!zeroMyBooks && !myBooksError\"\n                    @click=\"returnBook(book.id); refreshMyBooks();\"\n                  >Devolver</v-btn>\n                  <v-btn\n                    class=\"ma-2\"\n                    elevation=\"4\"\n                    rounded\n                    dark\n                    color=\"light-blue\"\n                    v-if=\"myBooksError\"\n                    @click=\"getMyBooks\"\n                  >Reintentar</v-btn>\n                </v-list-item-action>\n              </v-list-item>\n            </v-list>\n          </v-card>\n        </v-col>\n      </v-row>\n      <v-snackbar v-model=\"snackbar\" :timeout=\"3000\" color=\"success\" bottom>{{ snackText }}</v-snackbar>\n      <v-dialog v-model=\"dialog\" width=\"500\">\n        <v-card>\n          <v-card-title color=\"white\" class=\"headline light-blue\" primary-title>{{ dialogTitle }}</v-card-title>\n\n          <p class=\"mx-4 my-4\">{{ dialogText }}</p>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn v-if=\"this.$session.exists()\" color=\"primary\" text @click=\"dialog = false\">Cerrar</v-btn>\n            <v-btn\n              v-if=\"!this.$session.exists()\"\n              color=\"primary\"\n              text\n              @click=\"goToLogin\"\n            >Iniciar sesión</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  name: \"Login\",\n\n  data: () => ({\n    books: [],\n    myBooks: [],\n    zeroBooks: false,\n    zeroMyBooks: false,\n    myBooksError: false,\n    snackbar: false,\n    snackText: \"\",\n    dialog: false,\n    dialogTitle: \"\",\n    dialogText: \"\"\n  }),\n  methods: {\n    getBooks() {\n      var me = this;\n      this.books = [];\n      this.axios\n        .get(\"http://localhost:5555/books\")\n        .then(response => {\n          response.data.forEach(book => {\n            me.books.push(book);\n          });\n          // Si no trajo ningún libro\n          if (me.books.length == 0) {\n            me.books.push({\n              title: \"No hay libros para mostrar\",\n              author: \"Intente nuevamente más tarde\"\n            });\n            me.myBooks.push({\n              title: \"No hay libros para mostrar\",\n              author: \"Intente nuevamente más tarde\"\n            });\n            me.zeroBooks = true;\n          } else {\n            me.zeroBooks = false;\n          }\n        })\n        .catch(error => {\n          me.zeroBooks = true;\n          me.books.push({\n            title: \"Error al cargar los libros\",\n            author: \"Vuelva a intentar en un momento\"\n          });\n          me.myBooks.push({\n            title: \"No hay libros para mostrar\",\n            author: \"Intente nuevamente más tarde\"\n          });\n          me.checkSession(error);\n        });\n    },\n    getMyBooks() {\n      if (!this.zeroBooks) {\n        this.myBooks = [];\n        let me = this;\n        this.axios\n          .get(\"http://localhost:5555/loans\")\n          .then(response => {\n            me.myBooksError = false;\n            let expiration, expired = false;\n            response.data.forEach(loan => {\n              // Si corresponde a este usuario\n              if (loan.partner == me.$session.get(\"accountId\")) {\n                me.books.forEach(book => {\n                  if (book.id == loan.book) {\n                    let difference = me.differenceInDays(loan.expiration_date);\n                    if (difference < 0) {\n                      expiration = `Venció hace ${difference * -1} día`;\n                      expired = true;\n                    } else {\n                      expiration = `Vence en ${difference} día`;\n                    }\n                    if (difference > 1 || difference < -1) {\n                      expiration = expiration + \"s\";\n                    }\n                    if (difference == 0) {\n                      expiration = 'Vence hoy'\n                    }\n                    me.myBooks.push({\n                      title: book.title,\n                      author: book.author,\n                      expiration: expiration,\n                      id: book.id,\n                      expired: expired\n                    });\n                  }\n                });\n              }\n            });\n            // Si no trajo ningún libro\n            if (me.myBooks.length == 0) {\n              me.myBooks.push({\n                title: \"No hay libros para mostrar\",\n                author: \"\"\n              });\n              me.zeroMyBooks = true;\n            } else {\n              me.zeroMyBooks = false;\n            }\n          })\n          .catch(error => {\n            me.myBooksError = true;\n            me.myBooks.push({\n              title: \"Error al cargar los libros\",\n              author: \"Vuelva a intentar en un momento\"\n            });\n            me.checkSession(error);\n          });\n      }\n    },\n    lentBook(id) {\n      this.snackbar = false;\n      this.snackText = \"\";\n      let me = this;\n      this.axios\n        .post(\"http://localhost:5555/loans/lent\", {\n          Bid: id,\n          Pid: me.$session.get(\"accountId\")\n        })\n        .then(function() {\n          me.snackbar = true;\n          me.snackText = \"Libro pedido con éxito\";\n          me.refreshMyBooks();\n        })\n        .catch(function(error) {\n          if (error.message == \"Network Error\") {\n            me.dialogTitle = \"Error Interno\";\n            me.dialogText =\n              \"Ocurrió un error, por favor vuelva a intentar en un momento.\";\n            me.dialog = true;\n          }\n          if (\n            error.response &&\n            error.response.data.message ==\n              \"The partner has already lent that book.\"\n          ) {\n            me.dialogTitle = \"Libro ya pedido\";\n            me.dialogText =\n              \"Este libro ya fue pedido, puede volver a pedirlo luego de devolverlo y así extender su periodo de préstamo.\";\n            me.dialog = true;\n          }\n          if (\n            error.response &&\n            error.response.data.message == \"The partner has overdue debts.\"\n          ) {\n            me.dialogTitle = \"Préstamos expirados\";\n            me.dialogText =\n              \"Para pedir libros primero debe devolver los libros cuyo préstamo haya expirado.\";\n            me.dialog = true;\n          }\n          me.checkSession(error);\n        });\n    },\n    returnBook(id) {\n      this.snackbar = false;\n      this.snackText = \"\";\n      let me = this;\n      this.axios\n        .post(\"http://localhost:5555/loans/return\", {\n          Bid: id,\n          Pid: me.$session.get(\"accountId\")\n        })\n        .then(() => {\n          me.snackbar = true;\n          me.snackText = \"Libro devuelto con éxito\";\n        })\n        .catch(error => {\n          if (error.message == \"Network Error\") {\n            me.dialogTitle = \"Error Interno\";\n            me.dialogText =\n              \"Ocurrió un error, por favor vuelva a intentar en un momento.\";\n            me.dialog = true;\n          }\n          me.checkSession(error);\n        });\n    },\n    refreshMyBooks() {\n      // Le doy tiempo al backend de actualizar todo\n      setTimeout(() => this.getMyBooks(), 1000);\n    },\n    checkSession(error) {\n      if (error.response) {\n        if (error.response.data.message == \"Invalid token\") {\n          this.dialogTitle = \"Sesión expirada\";\n          this.dialogText =\n            \"Por favor, vuelva a iniciar sesión con sus credenciales.\";\n          this.dialog = true;\n          this.$session.destroy();\n        } else if (error.response.data.message == \"No token provided.\") {\n          this.$session.destroy();\n          this.$router.push(\"/login\");\n        }\n      }\n    },\n    goToLogin() {\n      this.dialog = false;\n      this.$router.push(\"/login\");\n    },\n    differenceInDays(date) {\n      let now = new Date().toISOString();\n      let d1 = Date.parse(now);\n      let d2 = Date.parse(date);\n      return Math.round((d2 - d1) / 1000 / 86400);\n    }\n  },\n  beforeMount() {\n    this.axios.defaults.headers.common = {\n      authorization: this.$session.get(\"jwt\")\n    };\n    if (this.$session.exists()) {\n      this.getBooks();\n      this.refreshMyBooks();\n    } else {\n      this.$router.push(\"/login\");\n    }\n  }\n};\n</script>\n\n<style scoped>\n#container {\n  background: url(\"../assets/background2.jpg\") no-repeat center center fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n}\n.expiredSubtitle {\n  color: red;\n}\n</style>\n"]}]}